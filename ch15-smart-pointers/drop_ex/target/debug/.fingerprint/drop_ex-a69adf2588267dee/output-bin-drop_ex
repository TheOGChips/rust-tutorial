{"message":"explicit use of destructor method","code":{"code":"E0040","explanation":"It is not allowed to manually call destructors in Rust.\n\nErroneous code example:\n\n```compile_fail,E0040\nstruct Foo {\n    x: i32,\n}\n\nimpl Drop for Foo {\n    fn drop(&mut self) {\n        println!(\"kaboom\");\n    }\n}\n\nfn main() {\n    let mut x = Foo { x: -7 };\n    x.drop(); // error: explicit use of destructor method\n}\n```\n\nIt is unnecessary to do this since `drop` is called automatically whenever a\nvalue goes out of scope. However, if you really need to drop a value by hand,\nyou can use the `std::mem::drop` function:\n\n```\nstruct Foo {\n    x: i32,\n}\nimpl Drop for Foo {\n    fn drop(&mut self) {\n        println!(\"kaboom\");\n    }\n}\nfn main() {\n    let mut x = Foo { x: -7 };\n    drop(x); // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":422,"byte_end":426,"line_start":19,"line_end":19,"column_start":7,"column_end":11,"is_primary":true,"text":[{"text":"    c.drop();","highlight_start":7,"highlight_end":11}],"label":"explicit destructor calls not allowed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider using `drop` function","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":420,"byte_end":428,"line_start":19,"line_end":19,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    c.drop();","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"drop(c)","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0040]\u001b[0m\u001b[0m\u001b[1m: explicit use of destructor method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    c.drop();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexplicit destructor calls not allowed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: consider using `drop` function: `drop(c)`\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0040`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0040`.\u001b[0m\n"}
